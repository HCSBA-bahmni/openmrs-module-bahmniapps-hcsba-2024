name: Build and Publish
on:
  push:
    branches:
      - master
      - 'release-*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

  workflow_dispatch:

jobs:
  build-publish-docker-helm:
    name: Build & Publish Docker Image & Helm Chart
    runs-on: ubuntu-latest
    env:
      HELM_CHART_PATH: package/helm/
      TX_TOKEN: ${{ secrets.TX_TOKEN }}
      
    steps:
      - uses: actions/checkout@v2

      - name: Listar archivos en el directorio .tx
        run: ls -la .tx/
      
      - name: Instalar Cliente de Transifex
        run: |
          curl -o- https://raw.githubusercontent.com/transifex/cli/master/install.sh | bash
          
      - name: Configurar PATH para el cliente de Transifex
        run: echo "/home/runner/work/openmrs-module-bahmniapps-hcsba-2024/openmrs-module-bahmniapps-hcsba-2024:$PATH" >> $GITHUB_PATH

      - name: Configurar Acceso a Transifex
        run: |
          cd   ${{ github.workspace }}/
          echo "[https://www.transifex.com]" > ${{ github.workspace }}/.transifexrc
          echo "token = ${{ secrets.TX_TOKEN }}" >> ${{ github.workspace }}/.transifexrc
          cat .transifexrc
          cat .tx/config

      - name: Copiar .transifexrc al Directorio Home
        run: cp ${{ github.workspace }}/.transifexrc ~/

      - name: Establecer TOKEN de Transifex como Variable de Entorno
        run: echo "TX_TOKEN=${{ secrets.TX_TOKEN }}" >> $GITHUB_ENV

      - name: Verificar posición de .transifexrc
        run: |
          echo "Verificando la posición de .transifexrc..."
          if [ -f "$HOME/.transifexrc" ]; then
            echo ".transifexrc encontrado en $HOME"
          else
            echo ".transifexrc no encontrado en $HOME"
          fi

      - name: Imprimir contenido de .transifexrc (Cuidado con los datos sensibles)
        run: |
          echo "Contenido de .transifexrc (asegúrate de no exponer tokens):"
          cat $HOME/.transifexrc || echo ".transifexrc no encontrado."

      - name: Verificar posición de .tx/config
        run: |
          echo "Verificando la posición de .tx/config..."
          if [ -f ".tx/config" ]; then
            echo ".tx/config encontrado en el directorio actual"
          else
            echo ".tx/config no encontrado en el directorio actual"
          fi

      - name: Imprimir contenido de .tx/config
        run: |
          echo "Contenido de .tx/config:"
          cat .tx/config || echo ".tx/config no encontrado."

      - name: Descargar Traducciones Españolas
        run: |
          cd   ${{ github.workspace }}/
          pwd
          ls
          cat .transifexrc
          cp .transifexrc $HOME/
          tx pull -l es  # Asume que 'es' es el código de idioma para español

      - name: Set env.ARTIFACT_VERSION
        run: |
          wget -q https://raw.githubusercontent.com/Bahmni/bahmni-infra-utils/main/setArtifactVersion.sh && chmod +x setArtifactVersion.sh
          ./setArtifactVersion.sh
          rm setArtifactVersion.sh
      - name: Use Node.js 10.16.3
        uses: actions/setup-node@v1
        with:
          node-version: 10.16.3
      - name: Use Ruby 2.5
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.5
      - run: npm install -g bower
      - run: npm install -g grunt-cli
      - run: gem install compass
      - run: npm install --global yarn
      - name: Package
        run: cd ui && yarn cache clean && /bin/bash ./scripts/package.sh
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        env:
          TX_TOKEN: ${{ secrets.TX_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Docker Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: package/docker/Dockerfile
          push: true
          tags: hcsba/bahmni-web-hcsba-2024:${{ env.ARTIFACT_VERSION }},hcsba/bahmni-web-hcsba-2024:latest
      - name: Update Version and Image Tag
        run: |
          yq --inplace '.image.tag = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/values.yaml
          yq --inplace '.version = "${{ env.ARTIFACT_VERSION }}"' $HELM_CHART_PATH/Chart.yaml
      - name: Helm Lint
        run: helm lint $HELM_CHART_PATH

      - name: Helm Package
        run: helm package $HELM_CHART_PATH

      - name: Checkout Charts Repository
        uses: actions/checkout@v2
        with:
          repository: HCSBA-bahmni/helm-charts
          ref: gh-pages
          path: helm-charts
          persist-credentials: false

      - name: Copy Helm Archive
        run: cp bahmni-web-${{ env.ARTIFACT_VERSION }}.tgz helm-charts/bahmni-web/

      - name: Helm Index
        working-directory: helm-charts/
        run: helm repo index --merge index.yaml --url https://HCSBA-bahmni.github.io/helm-charts/  .

      - name: Commit and Push Chart Repository
        working-directory: helm-charts/
        run: |
          git config user.name ${{ secrets.BAHMNI_USERNAME}}
          git config user.email ${{ secrets.BAHMNI_EMAIL}}
          git add .
          git commit -m "Release of bahmni-web-${{ env.ARTIFACT_VERSION }}"
          git push 'https://${{ secrets.BAHMNI_USERNAME}}:${{ secrets.BAHMNI_PAT}}@github.com/HCSBA-bahmni/helm-charts.git' gh-pages
